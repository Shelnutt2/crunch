// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: crunchrowlocation.capnp

#include "crunchrowlocation.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<69> b_8fd176f5af4d6860 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     96, 104,  77, 175, 245, 118, 209, 143,
     24,   0,   0,   0,   1,   0,   2,   0,
     13,   0, 219,  27,  90,  31, 197, 157,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 114, 117, 110,  99, 104, 114, 111,
    119, 108, 111,  99,  97, 116, 105, 111,
    110,  46,  99,  97, 112, 110, 112,  58,
     67, 114, 117, 110,  99, 104,  82, 111,
    119,  76, 111,  99,  97, 116, 105, 111,
    110,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     89,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
    102, 105, 108, 101,  78,  97, 109, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 111, 119,  83, 116,  97, 114, 116,
     76, 111,  99,  97, 116, 105, 111, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 111, 119,  69, 110, 100,  76, 111,
     99,  97, 116, 105, 111, 110,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8fd176f5af4d6860 = b_8fd176f5af4d6860.words;
#if !CAPNP_LITE
static const uint16_t m_8fd176f5af4d6860[] = {0, 2, 1};
static const uint16_t i_8fd176f5af4d6860[] = {0, 1, 2};
const ::capnp::_::RawSchema s_8fd176f5af4d6860 = {
  0x8fd176f5af4d6860, b_8fd176f5af4d6860.words, 69, nullptr, m_8fd176f5af4d6860,
  0, 3, i_8fd176f5af4d6860, nullptr, nullptr, { &s_8fd176f5af4d6860, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// CrunchRowLocation
constexpr uint16_t CrunchRowLocation::_capnpPrivate::dataWordSize;
constexpr uint16_t CrunchRowLocation::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind CrunchRowLocation::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CrunchRowLocation::_capnpPrivate::schema;
#endif  // !CAPNP_LITE



